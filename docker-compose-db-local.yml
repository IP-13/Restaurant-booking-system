version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  postgres-user-service:
    container_name: postgres-user-service
    image: postgres:16.0
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    ports:
      - '5433:5432'
    volumes:
      - ./postgres-user-service-volume:/var/lib/postgresql/data

  postgres-restaurant-service:
    container_name: postgres-restaurant-service
    image: postgres:16.0
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    ports:
      - '5434:5432'
    volumes:
      - ./postgres-restaurant-service-volume:/var/lib/postgresql/data

  postgres-grade-service:
    container_name: postgres-grade-service
    image: postgres:16.0
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    ports:
      - '5435:5432'
    volumes:
      - ./postgres-grade-service-volume:/var/lib/postgresql/data

  postgres-black-list-service:
    container_name: postgres-black-list-service
    image: postgres:16.0
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    ports:
      - '5436:5432'
    volumes:
      - ./postgres-black-list-service-volume:/var/lib/postgresql/data

  postgres-file-service:
    container_name: postgres-file-service
    image: postgres:16.0
    environment:
      POSTGRES_DB: db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "postgres" ]
      interval: 5s
      timeout: 1s
      retries: 2
    ports:
      - '5437:5432'
    volumes:
      - ./postgres-file-service-volume:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minio_admin
      - MINIO_ROOT_PASSWORD=minio_admin
      - MINIO_VOLUMES=/mnt/data
    command: server ~/minio --console-address :9001
    ports:
      - '9001:9001'
      - '9000:9000'
    volumes:
      - type: bind
        source: minio-volume
        target: /mnt/data